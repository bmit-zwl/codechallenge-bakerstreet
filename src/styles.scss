// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "~@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$codechallenge-bakerstreet-primary: mat.define-palette(mat.$indigo-palette);
$codechallenge-bakerstreet-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$codechallenge-bakerstreet-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$codechallenge-bakerstreet-theme: mat.define-light-theme(
    (
        color: (
            primary: $codechallenge-bakerstreet-primary,
            accent: $codechallenge-bakerstreet-accent,
            warn: $codechallenge-bakerstreet-warn,
        ),
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($codechallenge-bakerstreet-theme);

/* You can add global styles to this file, and also import other style files */

@import "vars.scss";

.card {
    display: flex;
    justify-content: center;
    align-items: center;

    padding: 20px;
    border-radius: 5px;
    background: #fff;
    border: 1px solid rgba(0, 0, 0, 0.1258);
    color: $primary-color;
    margin-bottom: 10px;

    .image {
        margin: 0 80px;
        width: 160px;
        height: 80px;
        // background-color: #ccc;
    }

    .content {
        width: 100%;
        h4 {
            margin: 10px 0;
        }
        p {
            padding: 0;
            margin: 0;
        }
    }
}

a {
    color: $primary-color;
}

html {
    background-color: #fafafa;
}
html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.backdrop-blurr {
    position: fixed;

    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    // when backdrop not supported (firefox)
    background-color: rgba(0, 0, 0, 0.6);

    /* if backdrop support: very transparent and blurred */
    @supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
        backdrop-filter: blur(5px);
        background-color: rgba(0, 0, 0, 0.1);
    }
}
.custom-dialog {
    min-width: 250px;
    width: 33%;
}
.custom-dialog .mat-dialog-container {
    box-shadow: none !important;
}




// media query 
@media screen and (max-width: 600px) {
    .card {
        flex-wrap: wrap;
        padding: 2px;
        display: flex;
        justify-content: column;
        .image {
            margin: 0;
        }
    }
    html {
        zoom: 100%;
    }
}


@media screen and (max-width: 2640px) {
    html {
        zoom: 120%;
    }
}
